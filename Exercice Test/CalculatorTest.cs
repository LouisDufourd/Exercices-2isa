using Exercice_bonus;

namespace Exercice_Test
{
    [TestClass]
    public class CalculatorTest
    {
        [DataTestMethod]
        [DataRow("0", "0", "0")]
        [DataRow("1", "1", "2")]
        [DataRow("1", "0", "1")]
        [DataRow("0", "5", "5")]
        [DataRow("123", "456", "579")]
        [DataRow("999", "1", "1000")]
        [DataRow("-1", "1", "0")]
        [DataRow("-5", "-5", "-10")]
        [DataRow("-5", "3", "-2")]
        [DataRow("3", "-5", "-2")]
        [DataRow("1000", "-100", "900")]
        [DataRow("0", "-7", "-7")]
        [DataRow("007", "03", "10")]
        [DataRow("10", "0020", "30")]
        [DataRow("000", "000", "0")]
        [DataRow("2147483647", "1", "2147483648")]
        [DataRow("-2147483648", "-1", "-2147483649")]
        [DataRow("999999999999999999", "1", "1000000000000000000")]
        [DataRow("0.5", "0.25", "0.75")]
        [DataRow("1.5", "2.25", "3.75")]
        [DataRow("-1.5", "1.5", "0.0")]
        [DataRow("-2.75", "-2.25", "-5.0")]
        [DataRow("0.0", "0.0", "0.0")]
        [DataRow("123456789.987654321", "0.012345679", "123456790.000000000")]
        [DataRow("999.001", "0.999", "1000.0")]
        [DataRow("-0.5", "-0.5", "-1.0")]
        [DataRow("100000000000000000000", "100000000000000000000", "200000000000000000000")]
        [DataRow("-100000000000000000000", "100000000000000000000", "0")]
        [DataRow("0.000000001", "0.000000002", "0.000000003")]
        [DataRow("123.4500", "0.5500", "124.0000")]
        [DataRow("0.3333333333", "0.6666666667", "1.0000000000")]
        [DataRow("0.0001", "0.0009", "0.0010")]
        [DataRow("-0.0001", "0.0001", "0.0000")]
        [DataRow("1", "2", "3")]
        [DataRow("1", "   2", "3")]
        [DataRow("3", "4", "7")]
        [DataRow("+5", "+5", "10")]
        [DataRow("+5", "-5", "0")]
        [DataRow("-0", "0", "0")]
        [DataRow("-0.0", "0.0", "0.0")]
        [DataRow("000123", "000077", "200")]
        [DataRow("0.000", "0.000", "0.000")]
        [DataRow("0", "-0", "0")]
        [DataRow("999999999999", "999999999999", "1999999999998")]
        [DataRow("12345678901234567890", "98765432109876543210", "111111111011111111100")]
        [DataRow("-12345678901234567890", "-98765432109876543210", "-111111111011111111100")]
        [DataRow("1.234567890123456789", "9.876543210987654321", "11.111111101111111110")]
        [DataRow("-1.234567890123456789", "9.876543210987654321", "8.641975320864197532")]
        [DataRow("1.0000000000000000001", "2.0000000000000000002", "3.0000000000000000003")]
        [DataRow("999999999999999999999999999999", "1", "1000000000000000000000000000000")]
        public void Add_ReturnsExpected(string firstNumber, string secondNumber, string expected)
        {
            var result = new Calculator().Add(firstNumber, secondNumber);
            Assert.AreEqual(expected, result);
        }
    }
}
